#!/bin/bash

TEMP_DEVICE="${BLOCK_INSTANCE:-Core}"
TEMP_OUTPUT=$(sensors | grep "${TEMP_DEVICE}")

IS_HIGH=0
IS_CRIT=0

TOTAL_TEMP=0
TOTAL_COUNT=0
while read RESULT_LINE; do
  TOTAL_COUNT=$((TOTAL_COUNT +1))
  CURRENT_TEMP=$(echo "${RESULT_LINE}" | grep -o -E "[\+\-]?[0-9]*.[0-9]*°C" | sed -n '1p' | tr -d '+°C')
  HIGHT_VALUE=$(echo "${RESULT_LINE}" | grep -o -E "[\+\-]?[0-9]*.[0-9]*°C" | sed -n '2p' | tr -d '+°C')
  CRIT_VALUE=$(echo "${RESULT_LINE}" | grep -o -E "[\+\-]?[0-9]*.[0-9]*°C" | sed -n '3p' | tr -d '+°C')

  TOTAL_TEMP=$(echo "scale=2;${TOTAL_TEMP}+${CURRENT_TEMP}" | bc -l)
  CORE_HIGH=$(echo "scale=0;${CURRENT_TEMP}-${HIGHT_VALUE} >= 0" | bc -l)
  CORE_CRIT=$(echo "scale=0;${CURRENT_TEMP}-${CRIT_VALUE} >= 0" | bc -l)

  if [[ "${CORE_CRIT}" -eq 1 ]]; then
    IS_CRIT=1
  elif [[ "${CORE_HIGH}" -eq 1 ]]; then
    IS_HIGH=1
  fi
done <<< "$(echo -e "$TEMP_OUTPUT")"

AVERAGE_TEMP=$(echo "scale=0;${TOTAL_TEMP}/${TOTAL_COUNT}" | bc -l)

if [[ "${TOTAL_COUNT}" -gt 1 ]]; then
  AVERAGE_TEMP="${AVERAGE_TEMP}"
fi

echo "${AVERAGE_TEMP}°C"
echo "${AVERAGE_TEMP}°C"

if [[ "${IS_CRIT}" -eq 1 ]]; then
  printf "#FF0000"
elif [[ "${IS_HIGH}" -eq 1 ]]; then
  printf "#FFFC00"
fi

exit 0;
